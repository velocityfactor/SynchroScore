// <editor-fold defaultstate="collapsed" desc="GNU General Public License">
//
//   SynchroScore
//   Copyright (C) 2009 Shayne Hughes
//
//   This program is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// </editor-fold>
/*
 * MeetSelectionDialog.java
 *
 * Created on Apr 18, 2009, 2:19:57 PM
 */
package org.aquastarz.score.gui;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.aquastarz.score.ScoreApp;
import org.aquastarz.score.controller.ScoreController;
import org.aquastarz.score.domain.Meet;
import org.aquastarz.score.domain.Season;

/**
 *
 * @author Shayne Hughes <velocityfactor@gmail.com>
 */
public class MeetSelectionDialog extends javax.swing.JDialog {

    public boolean canceled = false;

    /** Creates new form MeetSelectionDialog */
    public MeetSelectionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        fillMeetCombo(ScoreController.getMeets(ScoreApp.getCurrentSeason()));
        fillSeasonCombo(ScoreController.getSeasons());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        newMeetButton = new javax.swing.JRadioButton();
        existingMeetButton = new javax.swing.JRadioButton();
        meetCombo = new javax.swing.JComboBox();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        seasonLabel = new javax.swing.JLabel();
        seasonCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SynchroScore");
        setAlwaysOnTop(true);
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        buttonGroup1.add(newMeetButton);
        newMeetButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        newMeetButton.setText("New Meet");

        buttonGroup1.add(existingMeetButton);
        existingMeetButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        existingMeetButton.setText("Existing Meet");

        meetCombo.setFont(new java.awt.Font("Tahoma", 0, 14));
        meetCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        meetCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetComboActionPerformed(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/aquastarz/score/gui/synchro.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SynchroScore");
        jLabel2.setText(jLabel2.getText()+" "+ScoreApp.getVersion());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        seasonLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        seasonLabel.setText("Season:");

        seasonCombo.setFont(new java.awt.Font("Tahoma", 0, 14));
        seasonCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        seasonCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seasonComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(seasonLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seasonCombo, 0, 272, Short.MAX_VALUE))
                    .addComponent(newMeetButton, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addComponent(existingMeetButton, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(okButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton))
                            .addComponent(meetCombo, 0, 304, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seasonCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seasonLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(newMeetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingMeetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(meetCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton)
                            .addComponent(okButton)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        canceled = true;
    }//GEN-LAST:event_formWindowClosing

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        canceled = true;
        setVisible(false);
}//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

    private void seasonComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seasonComboActionPerformed
        ScoreApp.setCurrentSeason((Season)seasonCombo.getSelectedItem());
        fillMeetCombo(ScoreController.getMeets(ScoreApp.getCurrentSeason()));
        if(seasonCombo.getSelectedIndex()==0 && meetCombo.getItemCount()>0) {
            existingMeetButton.setSelected(true);
        }
    }//GEN-LAST:event_seasonComboActionPerformed

    private void meetComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetComboActionPerformed
        existingMeetButton.setSelected(true);
    }//GEN-LAST:event_meetComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static Meet selectMeet() throws MeetSelectionCanceledException {
        MeetSelectionDialog dialog = new MeetSelectionDialog(new javax.swing.JFrame(), true);
        Dimension dim = dialog.getToolkit().getScreenSize();
        Rectangle abounds = dialog.getBounds();
        dialog.setLocation((dim.width - abounds.width) / 2,
                (dim.height - abounds.height) / 2);
        dialog.setVisible(true);
        if (dialog.canceled) {
            throw new MeetSelectionCanceledException();
        }
        return dialog.getSelectedMeet();
    }

    public static class MeetSelectionCanceledException extends Exception {
    }

    private Meet getSelectedMeet() {
        if (canceled) {
            return null;
        } else if (newMeetButton.isSelected()) {
            return null;
        } else if (existingMeetButton.isSelected()) {
            return (Meet) meetCombo.getSelectedItem();
        }

        return null;
    }

    private void fillSeasonCombo(List<Season> seasons) {
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();
        for(Season s : seasons) {
            cbm.addElement(s);
        }
        seasonCombo.setModel(cbm);
        seasonCombo.setSelectedItem(ScoreApp.getCurrentSeason());
    }
    
    private void fillMeetCombo(List<Meet> meets) {
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();
        for (Meet m : meets) {
            cbm.addElement(m);
        }
        meetCombo.setModel(cbm);
        if (meets.size() == 0) {
            meetCombo.setEnabled(false);
            existingMeetButton.setEnabled(false);
            newMeetButton.setSelected(true);
        } else {
            meetCombo.setEnabled(true);
            existingMeetButton.setEnabled(true);
            meetCombo.setSelectedItem(meets.get(0));
            DateFormat df = SimpleDateFormat.getDateInstance(SimpleDateFormat.LONG);

            // Try to parse the date - it's just a string, so may not parse
            try {
                Date d = df.parse(meets.get(0).getMeetDate());

                if (isToday(d)) {
                    existingMeetButton.setSelected(true);
                }
                else {
                    newMeetButton.setSelected(true);
                }
            }
            catch(Exception e) { //don't care
            }
        }
    }
    private boolean isToday(Date inp) {

        Calendar cal1 = new GregorianCalendar();
        Calendar cal2 = new GregorianCalendar();

        cal1.setTime(new Date());
        cal2.setTime(inp);

        return ((cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) &&
                (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton existingMeetButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox meetCombo;
    private javax.swing.JRadioButton newMeetButton;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox seasonCombo;
    private javax.swing.JLabel seasonLabel;
    // End of variables declaration//GEN-END:variables
}
