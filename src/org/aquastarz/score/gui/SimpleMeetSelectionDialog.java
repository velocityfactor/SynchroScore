// <editor-fold defaultstate="collapsed" desc="GNU General Public License">
//
//   SynchroScore
//   Copyright (C) 2009 Shayne Hughes
//
//   This program is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// </editor-fold>
/*
 * MeetSelectionDialog.java
 *
 * Created on Apr 18, 2009, 2:19:57 PM
 */
package org.aquastarz.score.gui;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.aquastarz.score.ScoreApp;
import org.aquastarz.score.controller.ScoreController;
import org.aquastarz.score.domain.Meet;
import org.aquastarz.score.domain.Season;

/**
 *
 * @author Shayne Hughes <velocityfactor@gmail.com>
 */
public class SimpleMeetSelectionDialog extends javax.swing.JDialog {

    public static final int MSD_SELECTED = 1;
    public static final int MSD_CANCEL = 2;
    private boolean canceled = false;

    /** Creates new form MeetSelectionDialog */
    public SimpleMeetSelectionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        fillMeetCombo(ScoreController.getMeets(ScoreApp.getCurrentSeason()));
        fillSeasonCombo(ScoreController.getSeasons());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        meetCombo = new javax.swing.JComboBox();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        seasonLabel = new javax.swing.JLabel();
        seasonCombo = new javax.swing.JComboBox();
        seasonLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SynchroScore");
        setAlwaysOnTop(true);
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        meetCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        meetCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        okButton.setFont(new java.awt.Font("Tahoma", 0, 14));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        seasonLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seasonLabel.setText("Season:");

        seasonCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seasonCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        seasonCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seasonComboActionPerformed(evt);
            }
        });

        seasonLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        seasonLabel1.setText("Meet:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seasonLabel)
                            .addComponent(seasonLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(meetCombo, 0, 406, Short.MAX_VALUE)
                            .addComponent(seasonCombo, 0, 406, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addGap(159, 159, 159))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seasonLabel)
                    .addComponent(seasonCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meetCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seasonLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        canceled = true;
    }//GEN-LAST:event_formWindowClosing

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        canceled = true;
        setVisible(false);
}//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

    private void seasonComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seasonComboActionPerformed
        ScoreApp.setCurrentSeason((Season) seasonCombo.getSelectedItem());
        fillMeetCombo(ScoreController.getMeets(ScoreApp.getCurrentSeason()));
    }//GEN-LAST:event_seasonComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public int showMeetSelectionDialog() {
        Dimension dim = getToolkit().getScreenSize();
        Rectangle abounds = getBounds();
        setLocation((dim.width - abounds.width) / 2,
                (dim.height - abounds.height) / 2);
        setVisible(true);
        if (canceled) {
            return MSD_CANCEL;
        }
        return MSD_SELECTED;
    }

    public Meet getSelectedMeet() {
        if (canceled) {
            return null;
        } else {
            return (Meet) meetCombo.getSelectedItem();
        }
    }

    private void fillSeasonCombo(List<Season> seasons) {
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();
        for (Season s : seasons) {
            cbm.addElement(s);
        }
        seasonCombo.setModel(cbm);
        seasonCombo.setSelectedItem(ScoreApp.getCurrentSeason());
    }

    private void fillMeetCombo(List<Meet> meets) {
        DefaultComboBoxModel cbm = new DefaultComboBoxModel();
        for (Meet m : meets) {
            cbm.addElement(m);
        }
        meetCombo.setModel(cbm);
        if (meets.size() > 0) {
            meetCombo.setSelectedItem(meets.get(0));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox meetCombo;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox seasonCombo;
    private javax.swing.JLabel seasonLabel;
    private javax.swing.JLabel seasonLabel1;
    // End of variables declaration//GEN-END:variables
}
